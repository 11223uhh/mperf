name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  style-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Install clang-format
      run: sudo apt-get install -y clang-format-12
      
    - name: Check code style
      run: |
        find . -name '*.cpp' -o -name '*.h' -o -name '*.hpp' | while read file; do
          clang-format-12 -style=file -i "$file"
        done
        git diff --exit-code

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Release, Debug]
        arch: [x86]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -GNinja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DMPERF_ARCH=${{ matrix.arch }}

    - name: Build
      run: |
        cd build
        ninja

  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install NDK
      run: |
        yes | sdkmanager --install "ndk;21.4.7075529"
        echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/21.4.7075529" >> $GITHUB_ENV

    - name: Build Android
      run: |
        chmod +x android_build.sh
        ./android_build.sh -a ${{ matrix.arch }}

  test:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -GNinja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DMPERF_ARCH=x86

    - name: Build and run tests
      run: |
        cd build
        ninja
        ctest --output-on-failure